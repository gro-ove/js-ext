===================================[   ERROR REPORT   ]===================================
	Error while parsing current.jsx (D:\Development\GitHub\js-ext\tests\current.jsx).

===================================[   STACK  TRACE   ]===================================
	SyntaxError: Unexpected "bda" [current.jsx:1]
	    at new JsExtError (D:\Development\GitHub\js-ext\build\js-ext-new.js:4428:12)
	    at unexpected (D:\Development\GitHub\js-ext\build\js-ext-new.js:4452:8)
	    at consumeSemicolon (D:\Development\GitHub\js-ext\build\js-ext-new.js:4653:3)
	    at parseStatement (D:\Development\GitHub\js-ext\build\js-ext-new.js:3642:3)
	    at parseProgram (D:\Development\GitHub\js-ext\build\js-ext-new.js:3546:18)
	    at jsxParse (D:\Development\GitHub\js-ext\build\js-ext-new.js:2072:30)
	    at File.parsing (D:\Development\GitHub\js-ext\build\js-ext-new.js:584:2)
	    at Queue.<anonymous> (D:\Development\GitHub\js-ext\build\js-ext-new.js:5938:19)
	    at Queue.complete (D:\Development\GitHub\js-ext\build\js-ext-new.js:5924:31)
	    at Queue.<anonymous> (D:\Development\GitHub\js-ext\build\js-ext-new.js:5933:8)

===================================[   SOURCE  CODE   ]===================================
    1   a = lam bda;
    2   b = function (obj){
    3    var temp;
    4   
    5    console.log ('function - begin');
    6   
    7    try {
    8        console.log ('try');
    9        obj.test;
   10        console.log ('try - end');
   11    } catch (e){
   12        console.log ('catch');
   13        return 'from catch';
   14        console.log ('catch - end');
   15    } finally {
   16        console.log ('finally');
   17        return;
   18        console.log ('finally - end');
   19    }
   20   	
   21    console.log ('function - end');
   22   };
   23   (a)();
   24   console.log ('== with error ==');
   25   console.log ('result: ' + b ());
   26   console.log ('== without error ==');
   27   console.log ('result: ' + b ({}));
   28   
   29   var v = (1, 2);
   30   
   31   