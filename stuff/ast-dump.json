{
    "type": "Program",
    "body": [
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "First"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [],
                            "defaults": [],
                            "body": {
                                "type": "BlockStatement",
                                "body": [
                                    {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                            {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                    "type": "Identifier",
                                                    "name": "First"
                                                },
                                                "init": {
                                                    "type": "FunctionExpression",
                                                    "id": null,
                                                    "params": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "a"
                                                        }
                                                    ],
                                                    "defaults": [],
                                                    "body": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "__First_a"
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "Literal",
                                                                        "value": ":a"
                                                                    }
                                                                },
                                                                "comment": "__First_a",
                                                                "autocreated": true
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "__First_a"
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "+",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "a"
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "psv"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "rest": null,
                                                    "generator": false,
                                                    "expression": false,
                                                    "number": "@constructor0",
                                                    "publicMode": "private",
                                                    "abstract": false,
                                                    "static": false,
                                                    "className": {
                                                        "type": "Identifier",
                                                        "name": "First"
                                                    },
                                                    "method": true
                                                }
                                            },
                                            {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                    "type": "Identifier",
                                                    "name": "psv"
                                                },
                                                "init": {
                                                    "type": "Literal",
                                                    "value": ":staticprivate"
                                                },
                                                "publicMode": "private",
                                                "abstract": false,
                                                "static": true,
                                                "className": {
                                                    "type": "Identifier",
                                                    "name": "First"
                                                },
                                                "method": false
                                            }
                                        ],
                                        "kind": "var"
                                    },
                                    {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "First"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "prototype"
                                                    }
                                                },
                                                "property": {
                                                    "type": "Identifier",
                                                    "name": "oldFn"
                                                }
                                            },
                                            "right": {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [],
                                                "defaults": [],
                                                "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "console"
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "log"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "[ oldfn ]"
                                                                    },
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "psv"
                                                                    },
                                                                    {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "__First_a"
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    ]
                                                },
                                                "rest": null,
                                                "generator": false,
                                                "expression": false,
                                                "number": 13
                                            }
                                        }
                                    },
                                    {
                                        "type": "ReturnStatement",
                                        "argument": {
                                            "type": "Identifier",
                                            "name": "First"
                                        }
                                    }
                                ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false,
                            "number": 14
                        },
                        "arguments": []
                    }
                },
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "Second"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [],
                            "defaults": [],
                            "body": {
                                "type": "BlockStatement",
                                "body": [
                                    {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                            {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                    "type": "Identifier",
                                                    "name": "Second"
                                                },
                                                "init": {
                                                    "type": "FunctionExpression",
                                                    "id": null,
                                                    "params": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "a"
                                                        }
                                                    ],
                                                    "defaults": [],
                                                    "body": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                            {
                                                                "type": "IfStatement",
                                                                "test": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "===",
                                                                    "left": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "constructor"
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "Identifier",
                                                                        "name": "Second"
                                                                    }
                                                                },
                                                                "consequent": {
                                                                    "type": "ThrowStatement",
                                                                    "argument": {
                                                                        "type": "NewExpression",
                                                                        "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "Error"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Literal",
                                                                                "value": "Trying to instantiate abstract class"
                                                                            }
                                                                        ]
                                                                    }
                                                                },
                                                                "alternate": null
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "First"
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "call"
                                                                        }
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "a"
                                                                        }
                                                                    ],
                                                                    "super": 1
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "usv"
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "Literal",
                                                                        "value": ":public"
                                                                    }
                                                                },
                                                                "comment": "usv",
                                                                "autocreated": true
                                                            }
                                                        ]
                                                    },
                                                    "rest": null,
                                                    "generator": false,
                                                    "expression": false,
                                                    "number": "@constructor8",
                                                    "className": {
                                                        "type": "Identifier",
                                                        "name": "Second"
                                                    },
                                                    "method": true,
                                                    "autocreated": true
                                                }
                                            },
                                            {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                    "type": "Identifier",
                                                    "name": "_0"
                                                },
                                                "init": {
                                                    "type": "FunctionExpression",
                                                    "id": null,
                                                    "params": [],
                                                    "defaults": [],
                                                    "body": {
                                                        "type": "BlockStatement",
                                                        "body": []
                                                    },
                                                    "rest": null,
                                                    "generator": false,
                                                    "expression": false,
                                                    "number": null
                                                }
                                            }
                                        ],
                                        "kind": "var"
                                    },
                                    {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "_0"
                                                },
                                                "property": {
                                                    "type": "Identifier",
                                                    "name": "prototype"
                                                }
                                            },
                                            "right": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "First"
                                                },
                                                "property": {
                                                    "type": "Identifier",
                                                    "name": "prototype"
                                                }
                                            }
                                        }
                                    },
                                    {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "Second"
                                                },
                                                "property": {
                                                    "type": "Identifier",
                                                    "name": "prototype"
                                                }
                                            },
                                            "right": {
                                                "type": "NewExpression",
                                                "callee": {
                                                    "type": "Identifier",
                                                    "name": "_0"
                                                },
                                                "arguments": []
                                            }
                                        }
                                    },
                                    {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "Second"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "prototype"
                                                    }
                                                },
                                                "property": {
                                                    "type": "Identifier",
                                                    "name": "constructor"
                                                }
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "Second"
                                            }
                                        }
                                    },
                                    {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "_0"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "undefined"
                                            }
                                        }
                                    },
                                    {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "Second"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "prototype"
                                                    }
                                                },
                                                "property": {
                                                    "type": "Identifier",
                                                    "name": "fn"
                                                }
                                            },
                                            "right": {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [],
                                                "defaults": [],
                                                "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "console"
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "log"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "[ fn ]"
                                                                    },
                                                                    {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "Second"
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "psv"
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "__test"
                                                                            }
                                                                        },
                                                                        "arguments": []
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        {
                                                            "type": "ReturnStatement",
                                                            "argument": {
                                                                "type": "ThisExpression"
                                                            }
                                                        }
                                                    ]
                                                },
                                                "rest": null,
                                                "generator": false,
                                                "expression": false,
                                                "number": 16
                                            }
                                        }
                                    },
                                    {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "Second"
                                                },
                                                "property": {
                                                    "type": "Identifier",
                                                    "name": "psv"
                                                }
                                            },
                                            "right": {
                                                "type": "Literal",
                                                "value": ":overrided"
                                            }
                                        }
                                    },
                                    {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "Second"
                                                },
                                                "property": {
                                                    "type": "Identifier",
                                                    "name": "__dsv"
                                                }
                                            },
                                            "right": {
                                                "type": "Literal",
                                                "value": ":protected"
                                            }
                                        },
                                        "comment": "__dsv"
                                    },
                                    {
                                        "type": "ReturnStatement",
                                        "argument": {
                                            "type": "Identifier",
                                            "name": "Second"
                                        }
                                    }
                                ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false,
                            "number": 17
                        },
                        "arguments": []
                    }
                },
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "SecondNotAbstract"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [],
                            "defaults": [],
                            "body": {
                                "type": "BlockStatement",
                                "body": [
                                    {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                            {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                    "type": "Identifier",
                                                    "name": "SecondNotAbstract"
                                                },
                                                "init": {
                                                    "type": "FunctionExpression",
                                                    "id": null,
                                                    "params": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "a"
                                                        }
                                                    ],
                                                    "defaults": [],
                                                    "body": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "Second"
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "call"
                                                                        }
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "a"
                                                                        }
                                                                    ],
                                                                    "super": 1
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "rest": null,
                                                    "generator": false,
                                                    "expression": false,
                                                    "number": "@constructor10",
                                                    "className": {
                                                        "type": "Identifier",
                                                        "name": "SecondNotAbstract"
                                                    },
                                                    "method": true,
                                                    "autocreated": true
                                                }
                                            },
                                            {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                    "type": "Identifier",
                                                    "name": "_1"
                                                },
                                                "init": {
                                                    "type": "FunctionExpression",
                                                    "id": null,
                                                    "params": [],
                                                    "defaults": [],
                                                    "body": {
                                                        "type": "BlockStatement",
                                                        "body": []
                                                    },
                                                    "rest": null,
                                                    "generator": false,
                                                    "expression": false,
                                                    "number": null
                                                }
                                            }
                                        ],
                                        "kind": "var"
                                    },
                                    {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "_1"
                                                },
                                                "property": {
                                                    "type": "Identifier",
                                                    "name": "prototype"
                                                }
                                            },
                                            "right": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "Second"
                                                },
                                                "property": {
                                                    "type": "Identifier",
                                                    "name": "prototype"
                                                }
                                            }
                                        }
                                    },
                                    {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "SecondNotAbstract"
                                                },
                                                "property": {
                                                    "type": "Identifier",
                                                    "name": "prototype"
                                                }
                                            },
                                            "right": {
                                                "type": "NewExpression",
                                                "callee": {
                                                    "type": "Identifier",
                                                    "name": "_1"
                                                },
                                                "arguments": []
                                            }
                                        }
                                    },
                                    {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "SecondNotAbstract"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "prototype"
                                                    }
                                                },
                                                "property": {
                                                    "type": "Identifier",
                                                    "name": "constructor"
                                                }
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "SecondNotAbstract"
                                            }
                                        }
                                    },
                                    {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "_1"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "undefined"
                                            }
                                        }
                                    },
                                    {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "SecondNotAbstract"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "prototype"
                                                    }
                                                },
                                                "property": {
                                                    "type": "Identifier",
                                                    "name": "__test"
                                                }
                                            },
                                            "right": {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [],
                                                "defaults": [],
                                                "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                        {
                                                            "type": "ReturnStatement",
                                                            "argument": {
                                                                "type": "Literal",
                                                                "value": "test"
                                                            }
                                                        }
                                                    ]
                                                },
                                                "rest": null,
                                                "generator": false,
                                                "expression": false,
                                                "number": 19
                                            }
                                        }
                                    },
                                    {
                                        "type": "ReturnStatement",
                                        "argument": {
                                            "type": "Identifier",
                                            "name": "SecondNotAbstract"
                                        }
                                    }
                                ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false,
                            "number": 20
                        },
                        "arguments": []
                    }
                },
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "Third"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [],
                            "defaults": [],
                            "body": {
                                "type": "BlockStatement",
                                "body": [
                                    {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                            {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                    "type": "Identifier",
                                                    "name": "Third"
                                                },
                                                "init": {
                                                    "type": "FunctionExpression",
                                                    "id": null,
                                                    "params": [],
                                                    "defaults": [],
                                                    "body": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "Second"
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "call"
                                                                        }
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        {
                                                                            "type": "Literal",
                                                                            "value": ":argument"
                                                                        }
                                                                    ],
                                                                    "super": 1
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "console"
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "log"
                                                                        }
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "Literal",
                                                                            "value": "[ static test ]"
                                                                        },
                                                                        {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "Second"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "__dsv"
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "dsv"
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "usv"
                                                                            }
                                                                        }
                                                                    ]
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "rest": null,
                                                    "generator": false,
                                                    "expression": false,
                                                    "number": "@constructor5",
                                                    "publicMode": "protected",
                                                    "abstract": false,
                                                    "static": false,
                                                    "className": {
                                                        "type": "Identifier",
                                                        "name": "Third"
                                                    },
                                                    "method": true
                                                }
                                            },
                                            {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                    "type": "Identifier",
                                                    "name": "_2"
                                                },
                                                "init": {
                                                    "type": "FunctionExpression",
                                                    "id": null,
                                                    "params": [],
                                                    "defaults": [],
                                                    "body": {
                                                        "type": "BlockStatement",
                                                        "body": []
                                                    },
                                                    "rest": null,
                                                    "generator": false,
                                                    "expression": false,
                                                    "number": null
                                                }
                                            }
                                        ],
                                        "kind": "var"
                                    },
                                    {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "_2"
                                                },
                                                "property": {
                                                    "type": "Identifier",
                                                    "name": "prototype"
                                                }
                                            },
                                            "right": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "Second"
                                                },
                                                "property": {
                                                    "type": "Identifier",
                                                    "name": "prototype"
                                                }
                                            }
                                        }
                                    },
                                    {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "Third"
                                                },
                                                "property": {
                                                    "type": "Identifier",
                                                    "name": "prototype"
                                                }
                                            },
                                            "right": {
                                                "type": "NewExpression",
                                                "callee": {
                                                    "type": "Identifier",
                                                    "name": "_2"
                                                },
                                                "arguments": []
                                            }
                                        }
                                    },
                                    {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "Third"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "prototype"
                                                    }
                                                },
                                                "property": {
                                                    "type": "Identifier",
                                                    "name": "constructor"
                                                }
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "Third"
                                            }
                                        }
                                    },
                                    {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "_2"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "undefined"
                                            }
                                        }
                                    },
                                    {
                                        "type": "ReturnStatement",
                                        "argument": {
                                            "type": "Identifier",
                                            "name": "Third"
                                        }
                                    }
                                ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false,
                            "number": 22
                        },
                        "arguments": []
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "FunctionExpression",
                    "id": null,
                    "params": [],
                    "defaults": [],
                    "body": {
                        "type": "BlockStatement",
                        "body": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "NewExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "First"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Literal",
                                            "value": ":first"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                    "type": "NewExpression",
                                                    "callee": {
                                                        "type": "Identifier",
                                                        "name": "SecondNotAbstract"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Literal",
                                                            "value": ":test"
                                                        }
                                                    ]
                                                },
                                                "property": {
                                                    "type": "Identifier",
                                                    "name": "fn"
                                                }
                                            },
                                            "arguments": []
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "oldFn"
                                        }
                                    },
                                    "arguments": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                    "type": "NewExpression",
                                                    "callee": {
                                                        "type": "Identifier",
                                                        "name": "Third"
                                                    },
                                                    "arguments": []
                                                },
                                                "property": {
                                                    "type": "Identifier",
                                                    "name": "fn"
                                                }
                                            },
                                            "arguments": []
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "oldFn"
                                        }
                                    },
                                    "arguments": []
                                }
                            }
                        ]
                    },
                    "rest": null,
                    "generator": false,
                    "expression": false,
                    "number": 6
                },
                "arguments": []
            },
            "after": true
        }
    ]
}