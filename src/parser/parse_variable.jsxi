	// 12.2 Variable Statement

	function parseVariableIdentifier (){
		var token = lex ();

		if (token.type !== Token.Identifier)
			throwUnexpected (token);

		return {
			type: 	Syntax.Identifier,
			name: 	token.value
		};
	}

	function parseVariableDeclaration (kind){
		var id = parseVariableIdentifier (),
			init = null;

		if (match ('=')){
			lex ();
			init = parseAssignmentExpression ();
		}

		return {
			type: 	Syntax.VariableDeclarator,
			id: 	id,
			init: 	init
		};
	}

	function parseVariableDeclarationList (kind){
		var list = [];

		do {
			list.push (parseVariableDeclaration (kind));
			if (!match (','))
				break;
			lex ();
		} while (index < length);

		return list;
	}

	function parseVariableStatement (){
		var declarations;

		expectKeyword ('var');
		declarations = parseVariableDeclarationList ();
		consumeSemicolon ();

		return {
			type: 			Syntax.VariableDeclaration,
			declarations: 	declarations,
			kind: 			'var'
		};
	}