	// 12.2 Variable Statement

	function parseVariableIdentifier (){
		var token = lex ();

		if (token.type !== Token.Identifier)
			throwUnexpected (token);

		return identifier (token.value);
	}

	function parseVariableDeclaration (kind){
		var token = lookahead (),
			id = parseVariableIdentifier (),
			init = null;

		if (match ('=')){
			lex ();
			init = parseAssignmentExpression ();
		}

		return mark (variableDeclarator (id, init), token);
	}

	function parseVariableDeclarationList (kind){
		var list = [];

		do {
			list.push (parseVariableDeclaration (kind));
			if (!match (','))
				break;
			lex ();
		} while (index < length);

		return list;
	}

	function parseVariableStatement (){
		var declarations, token = lookahead ();

		expectKeyword ('var');
		declarations = parseVariableDeclarationList ();
		consumeSemicolon ();

		return mark (variableDeclaration (declarations), token);
	}