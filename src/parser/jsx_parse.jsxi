// TODO: Лицензия?

// Исходный код (в виде строки)
var source;

// Общая длина кода
var length;

// Текущая позиция парсера
var index;

// Номер текущей линии
var lineNumber;

// Следующий токен время от времени то сохраняется сюда, то читается отсюда
var buffer;

// Текущее состояние парсера (для всяких отметок вроде «inClass»)
var state;

// Опции, переданные парсеру (имя файла, втыкать ли "return" и всё такое)
var options;

// Здесь ставятся отметки, нужны ли будут коду какие-то вспомогательные функции.
var helpers;

// TODO: Переделать всё нормально

function jsxParse (code, args, callback){
	var error, result;
	
	try {
		source      = String (code).replace (/(\r\n|\r)/g, '\n') + '\n';
		length      = source.length;
		index       = 0;
		lineNumber  = source.length ? 1 : 0;
		buffer      = null;
		state 		= { allowIn: true, inClass: false, parsingComplete: false, preventSequence: false, asynchronous: false };
		options		= args || { filename: '[ not a file ]', insertReturn: false, initializationAllowed: false };
		helpers 	= new HelpersManager ();
		result 		= parseProgram ();
	} catch {
		error 		= e;
	} finally {
		source 		= length 
					= index 
					= lineNumber 
					= buffer 
					= state 
					= options 
					= null;

		if (typeof callback === 'function')
			callback (error, result, helpers.helpers);
		else if (error)
			throw error;
		else
			return result;
	}
}

function warning (what, location)
	Warnings.warn (what, { 
		filename: 		location && location.filename || options && options.filename, 
		lineNumber: 	location && location.lineNumber || lineNumber 
	});
