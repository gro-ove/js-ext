	// 12.1 Block
	
	function parseStatementList (){
		var list = [],
			statement;

		while (index < length){
			if (match ('}'))
				break;
			
			statement = parseSourceElement ();

			if (typeof statement === 'undefined')
				break;

			list.push (statement);
		}

		return list;
	}

	function parseBlock (){
		var block, oldPreventSequence;

		expect ('{');

		oldPreventSequence = state.preventSequence;
		state.preventSequence = false;

		block = parseStatementList ();

		state.preventSequence = oldPreventSequence;

		expect ('}');

		return {
			type: 	Syntax.BlockStatement,
			body: 	block
		};
	}

	function parseBlockOrNotBlock (){
		var block, oldPreventSequence;

		if (match ('{')){
			return parseBlock ();
		} else {
			return {
				type: 	Syntax.BlockStatement,
				body: 	[ parseSourceElement () ],
				single: true
			}
		}
	}