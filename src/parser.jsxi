// ==Jsx==
// @import parser/*
// ==/Jsx==

// TODO: Add license information and stuff
// Taken from https://github.com/ariya/esprima
// Author: Ariya Hidayat

module Parser {
	export function parse (code, options) {
		var program, toString;

		toString = String;
		if (typeof code !== 'string' && !(code instanceof String))
			code = toString (code);

		source          = code;
		index           = 0;
		lineNumber      = (source.length > 0) ? 1 : 0;
		lineStart       = 0;
		length          = source.length;
		buffer          = null;

		state 			= {
			allowIn:            true,
			labelSet:           {},
			inFunctionBody:     false,
			inIteration:        false,
			inSwitch:           false
		};

		extra 			= {};
		if (typeof options !== 'undefined'){
			extra.range 	= !!options.range;
			extra.loc 		= !!options.loc;
			extra.raw 		= !!options.raw;

			if (options.tokens) 
				extra.tokens = [];

			if (options.comment) 
				extra.comments = [];

			if (options.tolerant) 
				extra.errors = [];
		}

		patch ();
		try {
			program = parseProgram ();

			if (typeof extra.comments !== 'undefined') {
				filterCommentLocation ();
				program.comments = extra.comments;
			}

			if (typeof extra.tokens !== 'undefined'){
				filterTokenLocation ();
				program.tokens = extra.tokens;
			}

			if (typeof extra.errors !== 'undefined')
				program.errors = extra.errors;

			if (extra.range || extra.loc)
				program.body = filterGroup (program.body);
		} catch {
			throw e;
		} finally {
			unpatch ();
			extra = {};
		}

		return program;
	}
}
