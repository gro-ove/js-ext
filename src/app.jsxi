module App {
	function loadFile (path){
		try var file = require ('fs').readFileSync (args.data [0]);
		if (!file)
			console.fatal (2, 'Reading error: ' + file);

		preparseFile (file.toString ());
	}

	function preparseFile (data){
		var processed = macroProcess (data, lambda {
			console.log ('> PREPARSED:\n' + arg);
		});
	}

	function simpleTransform (fileName){
		try var file = require ('fs').readFileSync (fileName);

		if (!file)
			console.fatal (2, 'Reading error');

		var parsed = Parser.parse (file, { information: true, fileName: require ('path').basename (args.data [0]) });

		var str = Generator.work (parsed, require ('path').basename (args.data [0]));
		try 
			console.log (require ('escodegen').generate (parsed));
		catch
			console.json (parsed);
	}

	function init (){
		// First and second args - "node" and script name
		args = parseArgs (process.argv.slice (2), [
				// s - short, l - long, p - parameter (1 - one, 2 - multiple)
				{ 	s: 'i', 	l: 'include', 	p: 2		},
				{ 	s: 'o', 	l: 'output',  	p: 1		},
				{   s: 'h',		l: 'usage'					}
			]);

		loadFile (args.data [0]);
		// simpleTransform (args.data [0]);
	}
}