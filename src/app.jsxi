console.fatal = function (code){
	console.error.apply (console, Array.prototype.slice.call (arguments, typeof code === 'number' ? 1 : 0));
	process.exit (typeof code === 'number' ? code : 0);
};

console.json = function (obj){
	console.log (JSON.stringify (obj, false, 2));
};

module App {
	import Parser, Generator;

	function parseArgs (data, args){
		var result = { 
			data: [],
			put: lambda (info, value){
				if (info.p == 2){
					if (!this [info.s])
						this [info.s] = [];
					this [info.s].push (value);
				} else
					this [info.s] = info.p ? value : true;
			} 
		};

		for (var i, s in-array data){
			function put (fn, info)
				if (info = args.filter (fn)[0]){
					result.put (info, data [i + 1]);
					if (info.p)
						++ i;
				} else 
					console.fatal (1, 'Invalid arguments. Use "--usage" for view help.');

			if (s [0] == '-'){
				if (s [1] == '-')
					put (lambda arg.l == s.slice (2));
				else 
					for (var k in-array s.slice (1))
						put (lambda arg.s == k);
			} else
				result.data.push (s);
		}

		if (result.h){
			console.log ('Available args:')
			args.forEach (lambda console.log (' -{0} (--{1})'.format (arg.s, arg.l)));
			process.exit (0);
		} else
			return result;
	}

	function init (){
		// First and second args - "node" and script name
		args = parseArgs (process.argv.slice (2), [
				// s - short, l - long, p - parameter (1 - one, 2 - multiple)
				{ 	s: 'i', 	l: 'include', 	p: 2		},
				{ 	s: 'o', 	l: 'output',  	p: 1		},
				{   s: 'l',		l: 'length',	p: 1		},
				{   s: 'h',		l: 'usage'					}
			]);

		try var file = require ('fs').readFileSync (args.data [0]);

		if (!file)
			console.fatal (2, 'Reading error');

		var parsed = Parser.parse (file, { information: true });

		if (args.l){
			var c = JSON.stringify (parsed, false, 4).length;

			if (c != +args.l){
				console.log (console.json (parsed));
				console.fatal (3, 'Wrong length: ' + c);
			} else
				console.log (args.data [0] + ' - ok :)')
		} else {
			var str = Generator.work (parsed, require ('path').basename (args.data [0]));
			try 
				console.log (str);
			catch
				console.json (parsed);
		}
	}
}