module App {
	function parseArgs (data){
		console.log (data);

		var result = { data: [] },
			args = [
				// s - short version
				// l - long version
				// p - parameter (1 - one, 2 - multiple)
				{ 	s: 'i', 	l: 'include', 	p: 2		},
				{ 	s: 'o', 	l: 'output',  	p: 1		},
				{   s: 'h',		l: 'usage'					}
			];

		function put (info, value){
			if (!info){
				console.error ('Invalid arguments. Use "--usage" for view help.');
				process.exit (1);
			} else {
				if (info.p == 2)
					(result [info.s] || (result [info.s] = [])).push (value);
				else
					result [info.s] = info.p ? value : true;
				return info.p;
			}
		}

		for (var i, s in-array data){
			if (s [0] == '-'){
				if (s [1] == '-'){
					var info = args.filter (lambda arg.l == s.slice (2))[0];

					if (put (info, data [i + 1]))
						++ i;
				} else 
					for (var k in-array s.slice (1)){
						var info = args.filter (lambda arg.s == k)[0];

						if (put (info, data [i + 1]))
							++ i;
					}
			} else {
				result.data.push (s);
			}
		}

		if (result.h){
			console.log ('Available args:')
			args.forEach (lambda console.log (' -{0} (--{1})'.format (arg.s, arg.l)));
			process.exit (0);
		} else
			return result;
	}

	function init (){
		// First and second args - "node" and script name
		args = parseArgs (process.argv.slice (2));

		console.log (JSON.stringify (args, false, 4));
	}
}