	var fs 				= require ('fs'), 
		path 			= require ('path');

	function benchmark (input, output, count = 1){
		var data, 
			result, 
			from, 
			total = 0;

		console.time ('ast loaded');
		data = JSON.parse (fs.readFileSync (input));
		console.timeEnd ('ast loaded');

		for (var i = 0; i < count; i ++){
			from = +new Date;
			console.time ('generate');
			result = generate (data);
			console.timeEnd ('generate');
			total += +new Date - from;
		}

		if (i > 1)
			console.log ('average time: ' + total / count + 'ms');

		if (result)
			fs.writeFileSync (output, result);
	}

	process.nextTick (lambda {
		args = parseArgs (process.argv.slice (2), [
				// Атрибуты: 
				// 		s - короткая версия
				// 		l - длинная версия
				// 		p - есть ли параметры (1 - не больше одного, 2 - сколько
				//          угодно)
				// TODO: Сделать нормально
				// TODO: Сделать всё нормально
				// TODO: Переделать всё
				{ 	s: 'i', 	l: 'include', 	p: 2		},
				{ 	s: 'o', 	l: 'output',  	p: 1		},
				{   s: 'h',		l: 'usage'					},
				{   s: 'k',		l: 'keep-order'				}
			]);

		// return benchmark (path.resolve (__dirname, '../tests/ast.json'), path.resolve (__dirname, '../tests/ast-generated.js'));
		new Worker (args.data [0].replace (/^"|"$/g, '')).process ();
	});