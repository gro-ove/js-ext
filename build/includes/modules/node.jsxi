// ==Jsx==
// @target node
// @import utils/string.format.obj
// @compress on
// ==/Jsx==

module Node {
	var optimist = safeAccess ('optimist', 'correct interact in shell'),
		argv,
		installCmd = 'cd "{0:@(DIRNAME)}" && npm install {0:@(NAME)}';
	
	export var fs   = safeAccess ('fs'),
	           cp   = safeAccess ('child_process'),
	           path = safeAccess ('path');
	
	export function fatalError (){
		var temp = [];
		for (var i = 0; i < arguments.length; i ++){
			if (i)
				temp.push ('\n');
			temp.push (arguments [i]);
		}
		console.error.apply (console, temp);
		process.exit (1);
	}
	
	export function safeAccess (what, purpose = 'work'){
		var cache;
		
		return lambda 
			try 
				return cache || (cache = require (what));
			catch
				fatalError ('Please, install "{0}" for {1}.'.format (what, purpose), 
					'> ' + installCmd.format ({ dirname: __dirname, name: what }));
	}

	export function setInstallCmd (cmd)
		installCmd = cmd;
	
	export function args (usage, args){
		if (usage && args){
			var result = optimist ().usage (usage);
			for (var n in args)
				result = result.options (n, args [n]);
			argv = result.argv;
		}
		
		return argv;
	}
	
	export function showHelp ()
		optimist ().showHelp ();
		
	export function readFile (file)
		return fs ().readFileSync (file, 'utf-8');
		
	export function writeFile (file, content)
		return fs ().writeFileSync (file, content, 'utf-8');
		
	export function resolve (name)
		return path ().resolve (__dirname, name)
}